server {
        listen       80;
        server_name localhost;

        # for lets ecnrypt certificate generation
        location /.well-known/acme-challenge/ {
            alias /var/www/challenges/;
            try_files $uri =404;
        }


        location / {
                rewrite ^\/$ /registry/  redirect;
                proxy_pass      http://127.0.0.1:8080/;
                proxy_set_header Host $http_host; ## avoid CORS errors;
				proxy_intercept_errors on;
        }

		location /resources/konker/images/ {
                rewrite ^/(.*) /registry/$1  last;
                #proxy_pass      http://127.0.0.1:8080/;
                #proxy_set_header Host $http_host; ## avoid CORS errors
        }

		error_page 500 502 503 504 @error500;
		location @error500 {
			root /usr/share/nginx/html;

			set $error500 /custom_50x.html;

			if ($http_accept_language ~ "pt-br") {
				set $error500 /custom_pt_50x.html;
			}
			rewrite ^(.*)$ $error500 break;
		}

		location /testing {
			fastcgi_pass unix:/does/not/exist;
		}

        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}

server {
        listen       80;
        #listen       443 ssl;

        server_name  www.localhost.konkerlabs.net;
        return 301 $scheme://localhost$request_uri;
}


server {

        listen       80;
        #listen      443 ssl;
        server_name  api.localhost.konkerlabs.net;

        #ssl_certificate /etc/nginx/ssl/chained.pem;
        #ssl_certificate_key /etc/nginx/ssl/domain.key;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
        #ssl_prefer_server_ciphers on;

        # for generating lets ecnrypt certificates
        location /.well-known/acme-challenge/ {
            alias /var/www/challenges/;
            try_files $uri =404;
        }


        location / {
            return 404;
        }

        location ~ ^/(pub|sub)/(.*)$ {
            rewrite ^/(pub|sub)/(.*)$ /registry/$1/$2;
        }

        location /registry/pub/ {
          proxy_pass  http://127.0.0.1:8080/registry/pub/;
          proxy_set_header Host $http_host; ## avoid CORS errors
    }

    location /registry/sub/ {
      proxy_pass  http://127.0.0.1:8080/registry/sub/;
      proxy_set_header Host $http_host; ## avoid CORS errors
    }

}
